#!/usr/bin/env bash
# rejects commits that don't match the conventional commit format
# see: www.conventionalcommits.org

# build a regex for merge commits
merge_commit_regex="^Merge branch .* into .*$"

# build a regex for conventional commits
commit_type_enum=(
  "build"
  "chore"
  "ci"
  "docs"
  "feat"
  "fix"
  "perf"
  "refactor"
  "revert"
  "style"
  "test"
  "wip"
)

commit_types=$(printf "\|%s" "${commit_type_enum[@]}")
type_regex="\(${commit_types:2}\)"
scope_regex="\((.\+)\)\?"
conventional_title_regex="^$type_regex$scope_regex!\?: .*$"

# separate out the commit title from the commit body
commit_title=$(head -n1 $1)

# check if we have a merge commit
merge_commit=$(echo "$commit_title" | grep "$merge_commit_regex")

# if we don't have a merge commit, check for conventional commits
if [[ -z "$merge_commit" ]]; then
  conventional_title=$(echo "$commit_title" | grep "$conventional_title_regex")

  # if we don't have a conventional commit, prompt to continue
  if [[ -z "$conventional_title" ]]; then
    exec "~/.config/git/hooks/prompt" "[$commit_title] is improperly formatted. Continue?"
  fi

  # if we have a commit that's too long, prompt to continue
  if ((${#conventional_title} > 50)); then
    exec "~/.config/git/hooks/prompt" "[$commit_title] is longer than 50 characters. Continue?"
  fi
fi

exit 0
